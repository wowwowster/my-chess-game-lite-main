package {{packageName}};

import java.util.Collections;

import org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent;
import org.springframework.context.ApplicationListener;
import org.testcontainers.containers.MongoDBContainer;
import org.testcontainers.utility.DockerImageName;

public class TestMongoDBManager implements ApplicationListener<ApplicationEnvironmentPreparedEvent> {

  private static final long memoryInBytes = Math.round(1024 * 1024 * 1024 * 0.6);
  private static final long memorySwapInBytes = Math.round(1024 * 1024 * 1024 * 0.8);
  private static final long nanoCpu = Math.round(1_000_000_000L * 0.1);

  private static MongoDBContainer mongoDbContainer;

  @Override
  @SuppressWarnings("resource")
  public void onApplicationEvent(ApplicationEnvironmentPreparedEvent event) {
    if (mongoDbContainer != null) {
      return;
    }

    mongoDbContainer = new MongoDBContainer(DockerImageName.parse("{{mongodbDockerImage}}"))
        .withTmpFs(Collections.singletonMap("/testtmpfs", "rw"))
        .withCommand(
            """
            --wiredTigerCacheSizeGB 0.25 \
            --wiredTigerCollectionBlockCompressor none \
            --slowOpSampleRate 0 \
            --setParameter ttlMonitorEnabled=false \
            --setParameter diagnosticDataCollectionEnabled=false \
            --setParameter logicalSessionRefreshMillis=6000000 \
            --setParameter enableFlowControl=false \
            --setParameter oplogFetcherUsesExhaust=false \
            --setParameter disableResumableRangeDeleter=true \
            --setParameter enableShardedIndexConsistencyCheck=false \
            --setParameter enableFinerGrainedCatalogCacheRefresh=false \
            --setParameter readHedgingMode=off \
            --setParameter loadRoutingTableOnStartup=false \
            --setParameter rangeDeleterBatchDelayMS=2000000 \
            --setParameter skipShardingConfigurationChecks=true \
            --setParameter syncdelay=3600\
            """
            )
        .withCreateContainerCmdModifier(cmd -> cmd.getHostConfig()
            .withMemory(memoryInBytes)
            .withMemorySwap(memorySwapInBytes)
            .withNanoCPUs(nanoCpu));

    mongoDbContainer.start();

    System.setProperty("TEST_MONGODB_URI", mongoDbContainer.getReplicaSetUrl());
    Runtime.getRuntime()
        .addShutdownHook(new Thread(stopContainer()));
  }

  private Runnable stopContainer() {
    return mongoDbContainer::stop;
  }
}
